// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/file_server/proto.proto

package file_server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type R struct {
	Code                 int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *R) Reset()         { *m = R{} }
func (m *R) String() string { return proto.CompactTextString(m) }
func (*R) ProtoMessage()    {}
func (*R) Descriptor() ([]byte, []int) {
	return fileDescriptor_e827285a22341161, []int{0}
}

func (m *R) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_R.Unmarshal(m, b)
}
func (m *R) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_R.Marshal(b, m, deterministic)
}
func (m *R) XXX_Merge(src proto.Message) {
	xxx_messageInfo_R.Merge(m, src)
}
func (m *R) XXX_Size() int {
	return xxx_messageInfo_R.Size(m)
}
func (m *R) XXX_DiscardUnknown() {
	xxx_messageInfo_R.DiscardUnknown(m)
}

var xxx_messageInfo_R proto.InternalMessageInfo

func (m *R) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *R) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type UploadLocalReq struct {
	FileBytes            []byte   `protobuf:"bytes,1,opt,name=file_bytes,json=fileBytes,proto3" json:"file_bytes,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Format               string   `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadLocalReq) Reset()         { *m = UploadLocalReq{} }
func (m *UploadLocalReq) String() string { return proto.CompactTextString(m) }
func (*UploadLocalReq) ProtoMessage()    {}
func (*UploadLocalReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_e827285a22341161, []int{1}
}

func (m *UploadLocalReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadLocalReq.Unmarshal(m, b)
}
func (m *UploadLocalReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadLocalReq.Marshal(b, m, deterministic)
}
func (m *UploadLocalReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadLocalReq.Merge(m, src)
}
func (m *UploadLocalReq) XXX_Size() int {
	return xxx_messageInfo_UploadLocalReq.Size(m)
}
func (m *UploadLocalReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadLocalReq.DiscardUnknown(m)
}

var xxx_messageInfo_UploadLocalReq proto.InternalMessageInfo

func (m *UploadLocalReq) GetFileBytes() []byte {
	if m != nil {
		return m.FileBytes
	}
	return nil
}

func (m *UploadLocalReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UploadLocalReq) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

type UploadLocalRes struct {
	Res                  *R       `protobuf:"bytes,1,opt,name=res,proto3" json:"res,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Format               string   `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	Size                 int64    `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Url                  string   `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadLocalRes) Reset()         { *m = UploadLocalRes{} }
func (m *UploadLocalRes) String() string { return proto.CompactTextString(m) }
func (*UploadLocalRes) ProtoMessage()    {}
func (*UploadLocalRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_e827285a22341161, []int{2}
}

func (m *UploadLocalRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadLocalRes.Unmarshal(m, b)
}
func (m *UploadLocalRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadLocalRes.Marshal(b, m, deterministic)
}
func (m *UploadLocalRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadLocalRes.Merge(m, src)
}
func (m *UploadLocalRes) XXX_Size() int {
	return xxx_messageInfo_UploadLocalRes.Size(m)
}
func (m *UploadLocalRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadLocalRes.DiscardUnknown(m)
}

var xxx_messageInfo_UploadLocalRes proto.InternalMessageInfo

func (m *UploadLocalRes) GetRes() *R {
	if m != nil {
		return m.Res
	}
	return nil
}

func (m *UploadLocalRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UploadLocalRes) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *UploadLocalRes) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *UploadLocalRes) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func init() {
	proto.RegisterType((*R)(nil), "r")
	proto.RegisterType((*UploadLocalReq)(nil), "upload_local_req")
	proto.RegisterType((*UploadLocalRes)(nil), "upload_local_res")
}

func init() { proto.RegisterFile("api/file_server/proto.proto", fileDescriptor_e827285a22341161) }

var fileDescriptor_e827285a22341161 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x4d, 0x37, 0x16, 0x3a, 0xad, 0x50, 0x07, 0x91, 0x45, 0x11, 0xca, 0x9e, 0xea, 0x25,
	0x85, 0x0a, 0x1e, 0x3d, 0xf4, 0x27, 0xec, 0x51, 0x90, 0xb0, 0x6d, 0xa7, 0x12, 0xd8, 0xb8, 0x71,
	0x36, 0x11, 0xec, 0xaf, 0x97, 0xd9, 0xe6, 0x50, 0xcc, 0xa9, 0x97, 0xe5, 0xcd, 0x63, 0xe7, 0x63,
	0xde, 0x83, 0x47, 0xd7, 0x54, 0xab, 0x43, 0xe5, 0xa9, 0x8c, 0xc4, 0x3f, 0xc4, 0xab, 0x86, 0x43,
	0x1b, 0x8a, 0xf4, 0x9a, 0x67, 0xc8, 0x18, 0x11, 0xf2, 0x5d, 0xd8, 0x93, 0xce, 0x16, 0xd9, 0x52,
	0xd9, 0xa4, 0x71, 0x0e, 0xaa, 0x8e, 0x9f, 0x7a, 0xb4, 0xc8, 0x96, 0x13, 0x2b, 0xd2, 0x7c, 0xc0,
	0xbc, 0x6b, 0x7c, 0x70, 0xfb, 0xd2, 0x87, 0x9d, 0xf3, 0x25, 0xd3, 0x37, 0x3e, 0x01, 0x24, 0xf2,
	0xf6, 0xb7, 0xa5, 0x98, 0xf6, 0x67, 0x76, 0x22, 0xce, 0x46, 0x0c, 0x01, 0x7f, 0xb9, 0x9a, 0x7a,
	0x4a, 0xd2, 0x78, 0x0f, 0xe3, 0x43, 0xe0, 0xda, 0xb5, 0x5a, 0x25, 0xb7, 0x9f, 0xcc, 0x71, 0x80,
	0x8f, 0x78, 0x07, 0x8a, 0x7b, 0xee, 0x74, 0x3d, 0x2a, 0xd8, 0xca, 0x78, 0x09, 0x55, 0xfe, 0xc6,
	0xea, 0x48, 0x3a, 0x3f, 0x45, 0x13, 0x2d, 0xd1, 0x3a, 0xf6, 0xfa, 0xfa, 0x14, 0xad, 0x63, 0xbf,
	0x7e, 0x83, 0x5c, 0x8e, 0xc6, 0x57, 0x98, 0x9d, 0xdf, 0x80, 0xb7, 0xc5, 0xff, 0xc4, 0x0f, 0x03,
	0x2b, 0x9a, 0xab, 0xcd, 0xcd, 0xfb, 0xf4, 0xac, 0xe0, 0xed, 0x38, 0x75, 0xfb, 0xf2, 0x17, 0x00,
	0x00, 0xff, 0xff, 0x2c, 0xd6, 0xc2, 0x62, 0x7a, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FileClient is the client API for File service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileClient interface {
	UploadLocal(ctx context.Context, in *UploadLocalReq, opts ...grpc.CallOption) (*UploadLocalRes, error)
}

type fileClient struct {
	cc *grpc.ClientConn
}

func NewFileClient(cc *grpc.ClientConn) FileClient {
	return &fileClient{cc}
}

func (c *fileClient) UploadLocal(ctx context.Context, in *UploadLocalReq, opts ...grpc.CallOption) (*UploadLocalRes, error) {
	out := new(UploadLocalRes)
	err := c.cc.Invoke(ctx, "/file/upload_local", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileServer is the server API for File service.
type FileServer interface {
	UploadLocal(context.Context, *UploadLocalReq) (*UploadLocalRes, error)
}

// UnimplementedFileServer can be embedded to have forward compatible implementations.
type UnimplementedFileServer struct {
}

func (*UnimplementedFileServer) UploadLocal(ctx context.Context, req *UploadLocalReq) (*UploadLocalRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadLocal not implemented")
}

func RegisterFileServer(s *grpc.Server, srv FileServer) {
	s.RegisterService(&_File_serviceDesc, srv)
}

func _File_UploadLocal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadLocalReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServer).UploadLocal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/file/UploadLocal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServer).UploadLocal(ctx, req.(*UploadLocalReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _File_serviceDesc = grpc.ServiceDesc{
	ServiceName: "file",
	HandlerType: (*FileServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "upload_local",
			Handler:    _File_UploadLocal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/file_server/proto.proto",
}
